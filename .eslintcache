[{"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\index.js":"1","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\App.js":"2","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\reportWebVitals.js":"3","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\serviceWorkerRegistration.js":"4","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\DropWrapper.jsx":"5","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\Results.jsx":"6","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\context\\GlobalState.jsx":"7","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\context\\GlobalReducer.js":"8","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\FileDrop.jsx":"9","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\Overview.jsx":"10","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\Table.jsx":"11","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\Navbar.jsx":"12"},{"size":839,"mtime":1611930221719,"results":"13","hashOfConfig":"14"},{"size":839,"mtime":1612027606846,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1611518068402,"results":"16","hashOfConfig":"14"},{"size":5451,"mtime":1611930221720,"results":"17","hashOfConfig":"14"},{"size":663,"mtime":1611968715023,"results":"18","hashOfConfig":"14"},{"size":550,"mtime":1611968781865,"results":"19","hashOfConfig":"14"},{"size":4477,"mtime":1612026930959,"results":"20","hashOfConfig":"14"},{"size":603,"mtime":1611585295246,"results":"21","hashOfConfig":"14"},{"size":2605,"mtime":1612025016004,"results":"22","hashOfConfig":"14"},{"size":1836,"mtime":1612024417946,"results":"23","hashOfConfig":"14"},{"size":777,"mtime":1612025861711,"results":"24","hashOfConfig":"14"},{"size":1300,"mtime":1612027784232,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1jvpr3k",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\index.js",[],["53","54"],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\App.js",[],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\reportWebVitals.js",[],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\DropWrapper.jsx",[],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\Results.jsx",[],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\context\\GlobalState.jsx",["55"],"import React, {createContext, useReducer} from 'react'\r\nimport GlobalReducer from './GlobalReducer';\r\n\r\n\r\nconst initialState = {\r\n    files: [],\r\n    diffs: [],\r\n    worker: new Worker(\"ffprobe-worker.js\")\r\n}\r\n\r\n// export const STREAM_TYPES = [\"VIDEO\", \"AUDIO\", \"DATA\", \"SUBTITLE\", \"ATTACHMENT\", \"NB\"];\r\nexport const STREAM_TYPES = [\r\n    { name: \"Video\", icon: \"film\" }, \r\n    { name: \"Audio\", icon: \"music\" },\r\n    { name: \"Data\", icon: \"database\" },\r\n    { name: 'Subtitle', icon: 'closed-captioning' },\r\n    { name: 'Attachement', icon: 'paperclip' }, \r\n    { name: \"NB\", icon: 'question'}\r\n];\r\n\r\nconst mapToIcon = type => <i className={`fas fa-${type.icon}`} title={type.name} />;\r\n\r\n/**\r\n * Convert stream type int to name\r\n * @param {number} type typeInt of stream codec type\r\n * @return The type name\r\n */\r\nexport const mapToType = type => {\r\n    if (type === null || type === undefined || type === -1 || type >= STREAM_TYPES.length) {\r\n        return \"UNKNOWN\";\r\n    } else {\r\n        return mapToIcon(STREAM_TYPES[type]);\r\n    }\r\n}\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = props => {\r\n    const [state, dispatch] = useReducer(GlobalReducer, initialState);\r\n    const { worker } = state;\r\n\r\n    function determineDiffs(newFiles) {\r\n        const files = [...state.files, ...newFiles];\r\n        const diffs = [];\r\n        console.log(\"GET DIFFS\", files);\r\n\r\n        if (files.length > 0) {\r\n            Object.keys(files[0]).forEach(key => {\r\n                switch(key) {\r\n                    case 'start_time':\r\n                    case 'duration':\r\n                    case 'codec_name':\r\n                    case 'format':\r\n                    case 'bit_rate':\r\n                    case 'channels':\r\n                    case 'sample_rate':\r\n                    case 'frame_size':\r\n                        let prev = null;\r\n                        for (const file of files) {\r\n                            if (prev == null && file[key]) {\r\n                                prev = file;\r\n                            } else if (prev[key] !== file[key]){\r\n                                diffs.push(key);\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n            \r\n            console.log(diffs);\r\n            dispatch({\r\n                type: 'SET_DIFFS',\r\n                payload: diffs\r\n            });\r\n        }\r\n    }\r\n\r\n    function addFiles(newFiles) {\r\n        worker.onmessage = e => {\r\n            console.log(e.data);\r\n            const files = e.data.map(file => ({\r\n                ...file,\r\n                streams: file.streams?.map(stream => {\r\n                    const { id, start_time, duration, codec_name, format, bit_rate, time_base, width, height, channels, sample_rate, frame_size } = stream;\r\n                    return { \r\n                        id,\r\n                        type: mapToType(stream.codec_type),\r\n                        duration,\r\n                        bit_rate,\r\n                        time_base,\r\n                        codec_name,\r\n                        start_time,\r\n                        format,\r\n                        width,\r\n                        height,\r\n                        channels,\r\n                        sample_rate,\r\n                        frame_size\r\n                    }\r\n                })\r\n            }));\r\n\r\n            dispatch({\r\n                type: \"ADD_FILES\",\r\n                payload: files\r\n            });\r\n\r\n            // determineDiffs(e.data);\r\n        };\r\n    \r\n        let files = [];\r\n        for (let i = 0; i < newFiles.length; i++) {\r\n            files.push(newFiles.item(i));\r\n        }\r\n\r\n        files = files\r\n            .filter(file => state.files\r\n            .filter(f => f.url === file.name).length === 0)\r\n\r\n    \r\n        worker.postMessage([\"get_file_info\", files]);\r\n    }\r\n\r\n    function deleteFile(filename) {\r\n        dispatch({\r\n            type: \"DELETE_FILE\",\r\n            payload: filename\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{\r\n                files: state.files,\r\n                diffs: state.diffs,\r\n                addFiles,\r\n                deleteFile\r\n            }}\r\n        >\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\context\\GlobalReducer.js",[],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\FileDrop.jsx",[],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\Overview.jsx",[],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\Table.jsx",["56"],"import React from \"react\";\r\nimport { mapToType } from '../context/GlobalState';\r\n\r\nconst Table = (props) => {\r\n  const data = props.data ?? [];\r\n\r\n  const header = Object.keys(data[0] ?? []).map((key) => <th key={`th${key}`}>{key}</th>);\r\n\r\n  const body = data.map((entry, index) => (\r\n    <tr key={index}> \r\n      {Object.keys(entry ?? []).map((key) => <td key={key}>{entry[key]}</td>)}\r\n    </tr>\r\n    )\r\n  );\r\n\r\n  return (\r\n    <div className=\"table-responsive\">\r\n      <table className=\"table table-dark table-hover\">\r\n        <thead>\r\n          <tr>\r\n            {header && header.length > 0 ? header : null}\r\n          </tr>\r\n        </thead>\r\n        <tbody>{body && body.length > 0 ? body : null}</tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\Navbar.jsx",["57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":42,"column":14,"nodeType":"64","messageId":"65","endLine":42,"endColumn":28},{"ruleId":"62","severity":1,"message":"66","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":19},{"ruleId":"62","severity":1,"message":"67","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":14},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'determineDiffs' is defined but never used.","Identifier","unusedVar","'mapToType' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]