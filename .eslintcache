[{"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\index.js":"1","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\reportWebVitals.js":"2","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\App.js":"3","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\FileInput.jsx":"4","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\Overview.jsx":"5","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\Table.jsx":"6","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\StackedTable.jsx":"7","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\FileDrop.jsx":"8","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\DropWrapper.jsx":"9","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\context\\GlobalState.jsx":"10","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\context\\GlobalReducer.js":"11","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\Results.jsx":"12","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\Diff.jsx":"13","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\serviceWorkerRegistration.js":"14"},{"size":839,"mtime":1611930221719,"results":"15","hashOfConfig":"16"},{"size":375,"mtime":1611518068402,"results":"17","hashOfConfig":"16"},{"size":476,"mtime":1611930221714,"results":"18","hashOfConfig":"16"},{"size":1881,"mtime":1611526100793,"results":"19","hashOfConfig":"16"},{"size":1486,"mtime":1611930221716,"results":"20","hashOfConfig":"16"},{"size":1110,"mtime":1611930221717,"results":"21","hashOfConfig":"16"},{"size":540,"mtime":1611522619415,"results":"22","hashOfConfig":"16"},{"size":1947,"mtime":1611529101425,"results":"23","hashOfConfig":"16"},{"size":665,"mtime":1611585549809,"results":"24","hashOfConfig":"16"},{"size":3495,"mtime":1611930221718,"results":"25","hashOfConfig":"16"},{"size":603,"mtime":1611585295246,"results":"26","hashOfConfig":"16"},{"size":510,"mtime":1611584518757,"results":"27","hashOfConfig":"16"},{"size":143,"mtime":1611529227062,"results":"28","hashOfConfig":"16"},{"size":5451,"mtime":1611930221720,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1jvpr3k",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\index.js",[],["63","64"],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\reportWebVitals.js",[],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\App.js",[],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\FileInput.jsx",[],["65","66"],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\Overview.jsx",[],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\Table.jsx",[],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\StackedTable.jsx",[],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\FileDrop.jsx",["67"],"import React, {useEffect, useState, createRef} from 'react';\r\n\r\nconst FileDrop = ({ onDrop }) => {\r\n    const [drag, setDrag] = useState(false);\r\n    const [filename, setFilename] = useState('');\r\n    let dropRef = createRef();\r\n    let dragCounter = 0;\r\n  \r\n    const handleDrag = e => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n    };\r\n  \r\n    const handleDragIn = e => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      dragCounter++;\r\n      if (e.dataTransfer.items && e.dataTransfer.items.length > 0) setDrag(true);\r\n    };\r\n  \r\n    const handleDragOut = e => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      dragCounter--;\r\n      if (dragCounter === 0) setDrag(false);\r\n    };\r\n  \r\n    const handleDrop = e => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      setDrag(false);\r\n      if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n        onDrop(e.dataTransfer.files);\r\n        // setFilename(e.dataTransfer.files[0].name);\r\n        e.dataTransfer.clearData();\r\n        dragCounter = 0;\r\n      }\r\n    };\r\n  \r\n    useEffect(() => {\r\n      let div = dropRef.current;\r\n      div.addEventListener('dragenter', handleDragIn);\r\n      div.addEventListener('dragleave', handleDragOut);\r\n      div.addEventListener('dragover', handleDrag);\r\n      div.addEventListener('drop', handleDrop);\r\n      return () => {\r\n        div.removeEventListener('dragenter', handleDragIn);\r\n        div.removeEventListener('dragleave', handleDragOut);\r\n        div.removeEventListener('dragover', handleDrag);\r\n        div.removeEventListener('drop', handleDrop);\r\n      };\r\n    });\r\n  \r\n    return (\r\n      <div\r\n        ref={dropRef}\r\n        className={\r\n          drag ? 'filedrop drag' : filename ? 'filedrop ready' : 'filedrop'\r\n        }\r\n      >\r\n        {filename && !drag ? <div>{filename}</div> : <div>Drop a file here!</div>}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default FileDrop;","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\DropWrapper.jsx",[],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\context\\GlobalState.jsx",["68"],"import React, {createContext, useReducer} from 'react'\r\nimport GlobalReducer from './GlobalReducer';\r\n\r\n\r\nconst initialState = {\r\n    files: [],\r\n    diffs: [],\r\n    worker: new Worker(\"ffprobe-worker.js\")\r\n}\r\n\r\nexport const STREAM_TYPES = [\"VIDEO\", \"AUDIO\", \"DATA\", \"SUBTITLE\", \"ATTACHMENT\", \"NB\"];\r\n\r\n/**\r\n * Convert stream type int to name\r\n * @param {number} type typeInt of stream codec type\r\n * @return The type name\r\n */\r\nexport const mapToType = type => {\r\n    if (type === null || type === undefined || type === -1 || type >= STREAM_TYPES.length) {\r\n        return \"UNKNOWN\";\r\n    } else {\r\n        return STREAM_TYPES[type];\r\n    }\r\n}\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = props => {\r\n    const [state, dispatch] = useReducer(GlobalReducer, initialState);\r\n    const { worker } = state;\r\n\r\n    function determineDiffs(newFiles) {\r\n        const files = [...state.files, ...newFiles];\r\n        const diffs = [];\r\n        console.log(\"GET DIFFS\", files);\r\n\r\n        if (files.length > 0) {\r\n            Object.keys(files[0]).forEach(key => {\r\n                switch(key) {\r\n                    case 'start_time':\r\n                    case 'duration':\r\n                    case 'codec_name':\r\n                    case 'format':\r\n                    case 'bit_rate':\r\n                    case 'channels':\r\n                    case 'sample_rate':\r\n                    case 'frame_size':\r\n                        let prev = null;\r\n                        for (const file of files) {\r\n                            if (prev == null && file[key]) {\r\n                                prev = file;\r\n                            } else if (prev[key] !== file[key]){\r\n                                diffs.push(key);\r\n                                break;\r\n                            }\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            });\r\n            \r\n            console.log(diffs);\r\n            dispatch({\r\n                type: 'SET_DIFFS',\r\n                payload: diffs\r\n            });\r\n        }\r\n    }\r\n\r\n    function addFiles(newFiles) {\r\n        worker.onmessage = e => {\r\n            dispatch({\r\n                type: \"ADD_FILES\",\r\n                payload: e.data\r\n            });\r\n\r\n            // determineDiffs(e.data);\r\n        };\r\n    \r\n        let files = [];\r\n        for (let i = 0; i < newFiles.length; i++) {\r\n            files.push(newFiles.item(i));\r\n        }\r\n\r\n        files = files\r\n            .filter(file => state.files\r\n            .filter(f => f.url === file.name).length === 0);\r\n            // .map(f => f ({\r\n            //     ...f,\r\n            //     streams: f.streams.map(stream => ({ \r\n            //         ...stream, \r\n            //         type: mapToType.length > stream.codec_type ? mapToType(stream.codec_type) : \"UNKNOWN\" \r\n            //     }))\r\n            // }));\r\n\r\n    \r\n        worker.postMessage([\"get_file_info\", files]);\r\n    }\r\n\r\n    function deleteFile(filename) {\r\n        dispatch({\r\n            type: \"DELETE_FILE\",\r\n            payload: filename\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{\r\n                files: state.files,\r\n                diffs: state.diffs,\r\n                addFiles,\r\n                deleteFile\r\n            }}\r\n        >\r\n            {props.children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n","C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\context\\GlobalReducer.js",[],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\Results.jsx",[],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\components\\Diff.jsx",[],["69","70"],"C:\\Users\\lukei\\Documents\\video-stream-analyzer\\src\\serviceWorkerRegistration.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"71","replacedBy":"75"},{"ruleId":"73","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":5,"column":22,"nodeType":"79","messageId":"80","endLine":5,"endColumn":33},{"ruleId":"77","severity":1,"message":"81","line":32,"column":14,"nodeType":"79","messageId":"80","endLine":32,"endColumn":28},{"ruleId":"71","replacedBy":"82"},{"ruleId":"73","replacedBy":"83"},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],["84"],["85"],"no-unused-vars","'setFilename' is assigned a value but never used.","Identifier","unusedVar","'determineDiffs' is defined but never used.",["84"],["85"],"no-global-assign","no-unsafe-negation"]